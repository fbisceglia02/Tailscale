name: Create Tailscale infrastructure

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  plan:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./configuration
        run: terraform init

      - name: Terraform Validate
        working-directory: ./configuration
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./configuration
        run: terraform plan -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: configuration/tfplan

  apply:
    needs: plan
    runs-on: ubuntu-latest
    environment: production   # Requires manual approval
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan

      - name: Terraform Init
        working-directory: ./configuration
        run: terraform init

      - name: Terraform Apply
        working-directory: ./configuration
        run: terraform apply -auto-approve ../tfplan

      - name: Run post-apply inline script - Login az cli
        working-directory: ./configuration
        run: |
          echo "Running post-apply tasks..."
          echo "Logging Az CLI into Azure..."
          az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
          az account set --subscription $ARM_SUBSCRIPTION_ID
          
      - name: Run post-apply inline script - Generate key
        working-directory: ./configuration
        run: |
          cd ..
          mkdir output
          chmod +x ./key-generate.sh
          ./key-generate.sh
          echo "pwd?"
          pwd
          echo "ls?"
          ls
          sleep 100

      - name: Upload Keys
        uses: actions/upload-artifact@v4
        with:
          name: public-keys
          path: output/

